from keyboards import main_keyboard_client, rental_keyboard_client, buy_keyboard_client, house_buy_keyboard_client, get_contact_kb
from config import managers
from create_bot import bot, MenuStates
from aiogram.dispatcher import FSMContext
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters.builtin import Text, Command
from datetime import datetime
from data_base import sqlite_db
import aiofiles
from aiogram.utils.markdown import hlink





async def send_txt_and_get_contact(message: types.Message, state: FSMContext, property_type: str):
    text = f"–í–∏ –æ–±—Ä–∞–ª–∏ {property_type}, –∑–∞–ª–∏—à—ñ—Ç—å, –±—É–¥—å-–ª–∞—Å–∫–∞, —Å–≤—ñ–π –∫–æ–Ω—Ç–∞–∫—Ç —ñ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑ –í–∞–º–∏ –∑–≤'—è–∂–µ—Ç—å—Å—è."
    await message.answer(text, reply_markup=get_contact_kb)


async def send_welcom(message: types.Message, state: FSMContext):
    text = '–ö–æ–º–ø–∞–Ω—ñ—è WD Estate –ø—Ä–æ–ø–æ–Ω—É—î –ø–æ–≤–Ω–∏–π —Å–ø–µ–∫—Ç—Ä –ø–æ—Å–ª—É–≥ –≤ —Å—Ñ–µ—Ä—ñ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –≤—ñ–¥ –∫—Ä–∞—â–∏—Ö –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤ –∑ –±–∞–≥–∞—Ç–æ—Ä—ñ—á–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º.'
    async with aiofiles.open("bot/od_estate.jpeg", "rb") as photo:
        await message.answer_photo(photo)
    await message.answer(f"–í—ñ—Ç–∞—î–º–æ, {message.from_user.first_name}\n{text}")
    await message.answer('–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–∫–∞–≤–∏–π –¥–ª—è –í–∞—Å –Ω–∞–ø—Ä—è–º–æ–∫:', reply_markup=main_keyboard_client)
    await state.set_state(MenuStates.MAIN_MENU)


async def rent_handler(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏:", reply_markup=rental_keyboard_client)
    await state.set_state(MenuStates.MENU_RENT)


async def housing_rental_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–æ—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞")
    await state.set_state(MenuStates.GET_CONTACT_RENT_HOUSE) 


async def commercial_rental_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–æ—Ä–µ–Ω–¥–∞ –∫–æ–º–µ—Ä—Ü—ñ—ó")
    await state.set_state(MenuStates.GET_CONTACT_RENT_COMMERS)


async def land_rental_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–æ—Ä–µ–Ω–¥–∞ –∑–µ–º–ª—ñ")
    await state.set_state(MenuStates.GET_CONTACT_RENT_LAND)


async def buy_handler(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=buy_keyboard_client)
    await state.set_state(MenuStates.MENU_BUY)


async def house_buy_handler(message: types.Message, state: FSMContext):
    await message.answer("–û–±–µ—Ä—ñ—Ç—å —è–∫–µ –∂–∏—Ç–ª–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=house_buy_keyboard_client)
    await state.set_state(MenuStates.MENU_BUY_HOUSE)


async def commerce_buy_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–∫—É–ø—ñ–≤–ª—è –∫–æ–º–µ—Ä—Ü—ñ—ó")
    await state.set_state(MenuStates.GET_CONTACT_BUY_COMMERS)


async def land_buy_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–∫—É–ø—ñ–≤–ª—è –∑–µ–º–ª—ñ")
    await state.set_state(MenuStates.GET_CONTACT_BUY_LAND)


async def new_hous_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–∫—É–ø—ñ–≤–ª—è –Ω–æ–≤–æ–±—É–¥–æ–≤–∏")
    await state.set_state(MenuStates.GET_CONTACT_BUY_HOUSE_NEW)


async def old_hous_handler(message: types.Message, state: FSMContext):
    await send_txt_and_get_contact(message, state, "–∫—É–ø—ñ–≤–ª—è –≤—Ç–æ—Ä–∏–Ω–∫–∏")
    await state.set_state(MenuStates.GET_CONTACT_BUY_HOUSE_OLD)


async def international_real_estate_handler(message: types.Message, state:FSMContext):
    await send_txt_and_get_contact(message, state, "–∑–∞–∫–æ—Ä–¥–æ–Ω–Ω–∞ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å")
    await state.set_state(MenuStates.GET_CONTACT_INTERNATIONAL)
    

async def contact_handler(message: types.Message, state: FSMContext):
    text_of_thanks = "–î—è–∫—É—î–º–æ!\n–í–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n–ü–æ–∫–∏ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –æ–ø—Ä–∞—Ü—å–æ–≤—É—î –í–∞—à—É –∑–∞—è–≤–∫—É, –í–∏ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –Ω–∞—à–æ—é –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—é "
    # text_link = hlink('–Ω–∞ —Å–∞–π—Ç—ñ.', 'https://wd.od.ua/about/')
    text_link = "<a href='https://wd.od.ua/about/'>–Ω–∞ —Å–∞–π—Ç—ñ.</a>"

    user_info = {
        "Date" : datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "Name" : message.contact.first_name,
        "User_id" : message.contact.user_id,
        "Phone_number" : message.contact.phone_number
    }
    user_info_message = f"–ò–º—è: {message.contact.first_name}\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.contact.user_id}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +{message.contact.phone_number}"
    if message.from_user.username:
        user_info["User_name"] = f"@{message.from_user.username}"
        user_info_message += f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username}"
    else:
        user_info["User_name"] = "–ù–µ —É–∫–∞–∑–∞–Ω–æ!"
        user_info_message += f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ù–µ —É–∫–∞–∑–∞–Ω–æ!"

    state_to_manager = {
        MenuStates.GET_CONTACT_RENT_HOUSE.state: ["rent_house", "–æ—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞"],
        MenuStates.GET_CONTACT_RENT_COMMERS.state: ["rent_commers", "–æ—Ä–µ–Ω–¥–∞ –∫–æ–º–µ—Ä—Ü—ñ—ó"],
        MenuStates.GET_CONTACT_RENT_LAND.state: ["rent_land", "–æ—Ä–µ–Ω–¥–∞ –∑–µ–º–ª—ñ"],
        MenuStates.GET_CONTACT_BUY_HOUSE_NEW.state: ["buy_house_new", "–∫—É–ø—ñ–≤–ª—è –Ω–æ–≤–æ–±—É–¥–æ–≤–∏"],
        MenuStates.GET_CONTACT_BUY_HOUSE_OLD.state: ["buy_house_old", "–∫—É–ø—ñ–≤–ª—è –≤—Ç–æ—Ä–∏–Ω–∫–∏"],
        MenuStates.GET_CONTACT_BUY_COMMERS.state: ["buy_commers", "–∫—É–ø—ñ–≤–ª—è –∫–æ–º–µ—Ä—Ü—ñ—ó"],
        MenuStates.GET_CONTACT_BUY_LAND.state: ["buy_land", "–∫—É–ø—ñ–≤–ª—è –∑–µ–º–ª—ñ"],
        MenuStates.GET_CONTACT_INTERNATIONAL.state: ["international", "–∑–∞–∫–æ—Ä–¥–æ–Ω–Ω–∞ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å"]
    }

    current_state = await state.get_state()
    manager_key = state_to_manager.get(current_state)

    if manager_key:
        manager = managers[manager_key[0]].popleft()
        await sqlite_db.sql_add_row(user_info, category=manager_key[1].capitalize(), manager=manager)
        await bot.send_message(manager, f"{manager_key[1].capitalize()}:\n{user_info_message}")
        await message.answer(f"{text_of_thanks}{text_link}")
        managers[manager_key[0]].append(manager)


async def back_handler(message: types.Message, state: FSMContext) -> None:
    current_state = await state.get_state()
    if (current_state == MenuStates.MENU_BUY.state or current_state == MenuStates.MENU_RENT.state or current_state == None 
        or current_state == MenuStates.GET_CONTACT_INTERNATIONAL.state):
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —Ü—ñ–∫–∞–≤–∏–π –¥–ª—è –í–∞—Å –Ω–∞–ø—Ä—è–º–æ–∫:", reply_markup=main_keyboard_client)
        await state.set_state(MenuStates.MAIN_MENU)
    elif current_state == MenuStates.MENU_BUY_HOUSE.state:
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=buy_keyboard_client)
        await state.set_state(MenuStates.MENU_BUY)
    elif (current_state == MenuStates.GET_CONTACT_RENT_LAND.state or current_state == MenuStates.GET_CONTACT_RENT_HOUSE.state 
          or current_state == MenuStates.GET_CONTACT_RENT_COMMERS.state):
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏:", reply_markup=rental_keyboard_client)
        await state.set_state(MenuStates.MENU_RENT)
    elif current_state == MenuStates.GET_CONTACT_BUY_COMMERS.state or current_state == MenuStates.GET_CONTACT_BUY_LAND.state:
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —â–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=buy_keyboard_client)
        await state.set_state(MenuStates.MENU_BUY)
    elif current_state == MenuStates.GET_CONTACT_BUY_HOUSE_NEW.state or current_state == MenuStates.GET_CONTACT_BUY_HOUSE_OLD.state:
        await message.answer("–û–±–µ—Ä—ñ—Ç—å —è–∫–µ –∂–∏—Ç–ª–æ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:", reply_markup=house_buy_keyboard_client)
        await state.set_state(MenuStates.MENU_BUY_HOUSE)


def register_message_handler(dp: Dispatcher):
    dp.register_message_handler(send_welcom, commands=['start'], state='*')

    dp.register_message_handler(buy_handler, lambda message: message.text == 'üè† –ö—É–ø—ñ–≤–ª—è', state=MenuStates.MAIN_MENU.state)
    dp.register_message_handler(rent_handler, lambda message: message.text == 'üèòÔ∏è –û—Ä–µ–Ω–¥–∞', state=MenuStates.MAIN_MENU.state)
    dp.register_message_handler(international_real_estate_handler, lambda message: message.text == 'üè†üåç –ó–∞–∫–æ—Ä–¥–æ–Ω–Ω–∞ –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å', state=MenuStates.MAIN_MENU.state)

    dp.register_message_handler(housing_rental_handler, lambda message: message.text == 'üè† –û—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞', state=MenuStates.MENU_RENT.state)
    dp.register_message_handler(commercial_rental_handler, lambda message: message.text == 'üè¢ –û—Ä–µ–Ω–¥–∞ –∫–æ–º–µ—Ä—Ü—ñ—ó', state=MenuStates.MENU_RENT.state)
    dp.register_message_handler(land_rental_handler, lambda message: message.text == 'üèû –û—Ä–µ–Ω–¥–∞ –∑–µ–º–ª—ñ', state=MenuStates.MENU_RENT.state)

    dp.register_message_handler(house_buy_handler, lambda message: message.text == 'üè† –ö—É–ø—ñ–≤–ª—è –∂–∏—Ç–ª–∞', state=MenuStates.MENU_BUY.state)
    dp.register_message_handler(commerce_buy_handler, lambda message: message.text == 'üè¢ –ö—É–ø—ñ–≤–ª—è –∫–æ–º–µ—Ä—Ü—ñ—ó', state=MenuStates.MENU_BUY.state)
    dp.register_message_handler(land_buy_handler, lambda message: message.text == 'üèû –ö—É–ø—ñ–≤–ª—è –∑–µ–º–ª—ñ', state=MenuStates.MENU_BUY.state)

    dp.register_message_handler(new_hous_handler, lambda message: message.text == 'üèóÔ∏è –ù–æ–≤–æ–±—É–¥–æ–≤–∏', state=MenuStates.MENU_BUY_HOUSE.state)
    dp.register_message_handler(old_hous_handler, lambda message: message.text == 'üèòÔ∏è –í—Ç–æ—Ä–∏–Ω–∫–∞', state=MenuStates.MENU_BUY_HOUSE.state)

    dp.register_message_handler(back_handler, lambda message: message.text == "‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å", state='*')

    dp.register_message_handler(contact_handler, content_types=types.ContentType.CONTACT, state='*')


 

